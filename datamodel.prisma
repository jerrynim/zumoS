type User {
  id: ID! @unique
  profilePhoto: String!
  name: String!
  account: String!
  posts: [Post!]! @relation(name: "PostsOfUser", onDelete: CASCADE)
  likes: [Like!]! @relation(name: "LikesOfUser", onDelete: CASCADE)
  comments: [Comment!]! @relation(name: "CommentsOfUser", onDelete: CASCADE)
}
type Post {
  id: ID! @unique
  title: String!
  subTitle: String!
  user: User @relation(name: "PostsOfUser")
  cards: [Card!]! @relation(name: "CardsOfPost", onDelete: CASCADE)
  likes: [Like!]! @relation(name: "LikesOfPost", onDelete: CASCADE)
  comments: [Comment!]! @relation(name: "CommentsOfPost", onDelete: CASCADE)
  isLiked: Boolean
}

type Like {
  id: ID! @unique
  user: User @relation(name: "LikesOfUser")
  post: Post @relation(name: "LikesOfPost")
}

type Comment {
  id: ID! @unique
  text: String!
  user: User @relation(name: "CommentsOfUser")
  post: Post @relation(name: "CommentsOfPost")
}

type File {
  id: ID! @unique
  url: String!
  card: Card @relation(name: "FilesOfCard")
}

type Card {
  id: ID! @unique
  files: [File!]! @relation(name: "FilesOfCard", onDelete: CASCADE)
  title: String!
  subTitle: String!
  location: String
  contents: [String!]!
  day: String
  time: String
  cost: String
  schedule: String
  homepage: String
  phoneNumber: String
  park: String
  info: String
}
